/*
 * This file is generated by jOOQ.
 */
package net.sync.game.database.schema.tables.records;


import net.sync.game.database.schema.tables.Songs;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SongsRecord extends UpdatableRecordImpl<SongsRecord> implements Record16<Integer, String, String, String, String, String, String, String, String, String, String, String, String, String, Float, Float> {

    private static final long serialVersionUID = 1319455821;

    /**
     * Setter for <code>songs.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>songs.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>songs.pack</code>.
     */
    public void setPack(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>songs.pack</code>.
     */
    public String getPack() {
        return (String) get(1);
    }

    /**
     * Setter for <code>songs.directory</code>.
     */
    public void setDirectory(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>songs.directory</code>.
     */
    public String getDirectory() {
        return (String) get(2);
    }

    /**
     * Setter for <code>songs.hash</code>.
     */
    public void setHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>songs.hash</code>.
     */
    public String getHash() {
        return (String) get(3);
    }

    /**
     * Setter for <code>songs.sim_path</code>.
     */
    public void setSimPath(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>songs.sim_path</code>.
     */
    public String getSimPath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>songs.format</code>.
     */
    public void setFormat(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>songs.format</code>.
     */
    public String getFormat() {
        return (String) get(5);
    }

    /**
     * Setter for <code>songs.title</code>.
     */
    public void setTitle(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>songs.title</code>.
     */
    public String getTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>songs.subtitle</code>.
     */
    public void setSubtitle(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>songs.subtitle</code>.
     */
    public String getSubtitle() {
        return (String) get(7);
    }

    /**
     * Setter for <code>songs.artist</code>.
     */
    public void setArtist(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>songs.artist</code>.
     */
    public String getArtist() {
        return (String) get(8);
    }

    /**
     * Setter for <code>songs.genre</code>.
     */
    public void setGenre(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>songs.genre</code>.
     */
    public String getGenre() {
        return (String) get(9);
    }

    /**
     * Setter for <code>songs.banner_path</code>.
     */
    public void setBannerPath(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>songs.banner_path</code>.
     */
    public String getBannerPath() {
        return (String) get(10);
    }

    /**
     * Setter for <code>songs.background_path</code>.
     */
    public void setBackgroundPath(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>songs.background_path</code>.
     */
    public String getBackgroundPath() {
        return (String) get(11);
    }

    /**
     * Setter for <code>songs.album</code>.
     */
    public void setAlbum(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>songs.album</code>.
     */
    public String getAlbum() {
        return (String) get(12);
    }

    /**
     * Setter for <code>songs.music_path</code>.
     */
    public void setMusicPath(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>songs.music_path</code>.
     */
    public String getMusicPath() {
        return (String) get(13);
    }

    /**
     * Setter for <code>songs.sample_start</code>.
     */
    public void setSampleStart(Float value) {
        set(14, value);
    }

    /**
     * Getter for <code>songs.sample_start</code>.
     */
    public Float getSampleStart() {
        return (Float) get(14);
    }

    /**
     * Setter for <code>songs.sample_length</code>.
     */
    public void setSampleLength(Float value) {
        set(15, value);
    }

    /**
     * Getter for <code>songs.sample_length</code>.
     */
    public Float getSampleLength() {
        return (Float) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, String, String, String, String, String, String, String, String, String, String, String, Float, Float> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Integer, String, String, String, String, String, String, String, String, String, String, String, String, String, Float, Float> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Songs.SONGS.ID;
    }

    @Override
    public Field<String> field2() {
        return Songs.SONGS.PACK;
    }

    @Override
    public Field<String> field3() {
        return Songs.SONGS.DIRECTORY;
    }

    @Override
    public Field<String> field4() {
        return Songs.SONGS.HASH;
    }

    @Override
    public Field<String> field5() {
        return Songs.SONGS.SIM_PATH;
    }

    @Override
    public Field<String> field6() {
        return Songs.SONGS.FORMAT;
    }

    @Override
    public Field<String> field7() {
        return Songs.SONGS.TITLE;
    }

    @Override
    public Field<String> field8() {
        return Songs.SONGS.SUBTITLE;
    }

    @Override
    public Field<String> field9() {
        return Songs.SONGS.ARTIST;
    }

    @Override
    public Field<String> field10() {
        return Songs.SONGS.GENRE;
    }

    @Override
    public Field<String> field11() {
        return Songs.SONGS.BANNER_PATH;
    }

    @Override
    public Field<String> field12() {
        return Songs.SONGS.BACKGROUND_PATH;
    }

    @Override
    public Field<String> field13() {
        return Songs.SONGS.ALBUM;
    }

    @Override
    public Field<String> field14() {
        return Songs.SONGS.MUSIC_PATH;
    }

    @Override
    public Field<Float> field15() {
        return Songs.SONGS.SAMPLE_START;
    }

    @Override
    public Field<Float> field16() {
        return Songs.SONGS.SAMPLE_LENGTH;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPack();
    }

    @Override
    public String component3() {
        return getDirectory();
    }

    @Override
    public String component4() {
        return getHash();
    }

    @Override
    public String component5() {
        return getSimPath();
    }

    @Override
    public String component6() {
        return getFormat();
    }

    @Override
    public String component7() {
        return getTitle();
    }

    @Override
    public String component8() {
        return getSubtitle();
    }

    @Override
    public String component9() {
        return getArtist();
    }

    @Override
    public String component10() {
        return getGenre();
    }

    @Override
    public String component11() {
        return getBannerPath();
    }

    @Override
    public String component12() {
        return getBackgroundPath();
    }

    @Override
    public String component13() {
        return getAlbum();
    }

    @Override
    public String component14() {
        return getMusicPath();
    }

    @Override
    public Float component15() {
        return getSampleStart();
    }

    @Override
    public Float component16() {
        return getSampleLength();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPack();
    }

    @Override
    public String value3() {
        return getDirectory();
    }

    @Override
    public String value4() {
        return getHash();
    }

    @Override
    public String value5() {
        return getSimPath();
    }

    @Override
    public String value6() {
        return getFormat();
    }

    @Override
    public String value7() {
        return getTitle();
    }

    @Override
    public String value8() {
        return getSubtitle();
    }

    @Override
    public String value9() {
        return getArtist();
    }

    @Override
    public String value10() {
        return getGenre();
    }

    @Override
    public String value11() {
        return getBannerPath();
    }

    @Override
    public String value12() {
        return getBackgroundPath();
    }

    @Override
    public String value13() {
        return getAlbum();
    }

    @Override
    public String value14() {
        return getMusicPath();
    }

    @Override
    public Float value15() {
        return getSampleStart();
    }

    @Override
    public Float value16() {
        return getSampleLength();
    }

    @Override
    public SongsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SongsRecord value2(String value) {
        setPack(value);
        return this;
    }

    @Override
    public SongsRecord value3(String value) {
        setDirectory(value);
        return this;
    }

    @Override
    public SongsRecord value4(String value) {
        setHash(value);
        return this;
    }

    @Override
    public SongsRecord value5(String value) {
        setSimPath(value);
        return this;
    }

    @Override
    public SongsRecord value6(String value) {
        setFormat(value);
        return this;
    }

    @Override
    public SongsRecord value7(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public SongsRecord value8(String value) {
        setSubtitle(value);
        return this;
    }

    @Override
    public SongsRecord value9(String value) {
        setArtist(value);
        return this;
    }

    @Override
    public SongsRecord value10(String value) {
        setGenre(value);
        return this;
    }

    @Override
    public SongsRecord value11(String value) {
        setBannerPath(value);
        return this;
    }

    @Override
    public SongsRecord value12(String value) {
        setBackgroundPath(value);
        return this;
    }

    @Override
    public SongsRecord value13(String value) {
        setAlbum(value);
        return this;
    }

    @Override
    public SongsRecord value14(String value) {
        setMusicPath(value);
        return this;
    }

    @Override
    public SongsRecord value15(Float value) {
        setSampleStart(value);
        return this;
    }

    @Override
    public SongsRecord value16(Float value) {
        setSampleLength(value);
        return this;
    }

    @Override
    public SongsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, Float value15, Float value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SongsRecord
     */
    public SongsRecord() {
        super(Songs.SONGS);
    }

    /**
     * Create a detached, initialised SongsRecord
     */
    public SongsRecord(Integer id, String pack, String directory, String hash, String simPath, String format, String title, String subtitle, String artist, String genre, String bannerPath, String backgroundPath, String album, String musicPath, Float sampleStart, Float sampleLength) {
        super(Songs.SONGS);

        set(0, id);
        set(1, pack);
        set(2, directory);
        set(3, hash);
        set(4, simPath);
        set(5, format);
        set(6, title);
        set(7, subtitle);
        set(8, artist);
        set(9, genre);
        set(10, bannerPath);
        set(11, backgroundPath);
        set(12, album);
        set(13, musicPath);
        set(14, sampleStart);
        set(15, sampleLength);
    }
}
